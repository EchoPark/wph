<style lang="less">
  .slider {
    height: 240px;
  }
  .swiper {
    height: 100%;
  }
  .slider-image {
    display: block;
    margin: 0 auto;
  }
  .search-bar {
    padding: 40rpx 50rpx;
    background-color: rgb(255, 130, 1)
  }
  .search-input {
    display: block;
    margin: 0 auto;
    padding: 0 20rpx;
    font-size: 14px;
    line-height: 100%;
    border-radius: 5px;
    background-color: rgb(245, 245, 245);
  }
  .product-container {
    padding-top: 20rpx;
    font-size: 0;
    overflow: hidden;
  }
  .product-item {
    display: inline-block;
    width: 50%;
    box-sizing: border-box;
    margin-bottom: 10rpx;
    padding: 10rpx;
  }
  .product-img {
    display: block;
    margin: 0 auto;
    width: 200rpx;
    height: 200rpx;
    background: #efefef;
  }
  .product-text {
    display: block;
    font-size: 14px;
  }
  .product-title {
    display: block;
    margin-top: 10rpx;
    text-align: center;
  }
  .product-price {
    display: block;
    margin: 10rpx auto 0;
    color: red;
    font-size: 16px;
    text-align: center;
  }
</style>
<template>
  <view>
    <view class="search-bar">
      <input class='search-input' placeholder="testsetest" />
    </view>
    <view>
      <i-tabs current="{{ current_scroll }}" scroll bindchange="handleChangeScroll">
        <i-tab key="tab1" title="上新"></i-tab>
        <i-tab key="tab2" title="女装"></i-tab>
        <i-tab key="tab3" title="鞋包"></i-tab>
        <i-tab key="tab4" title="美妆"></i-tab>
        <i-tab key="tab5" title="居家"></i-tab>
        <i-tab key="tab6" title="美食"></i-tab>
        <i-tab key="tab7" title="母婴"></i-tab>
        <i-tab key="tab8" title="家电"></i-tab>
        <i-tab key="tab9" title="数码"></i-tab>
      </i-tabs>
    </view>
    <view class="slider">
      <swiper class="swiper" indicator-dots=true autoplay=true>
        <block wx:for="{{sliderArr}}">
          <swiper-item>
            <navigator target="miniProgram" app-id="wxe9714e742209d35f" path="{{item.url}}"><image src="{{item.image_url}}" class="slider-image"/></navigator>
          </swiper-item>
        </block>
      </swiper>
    </view>
    <view>
      <i-grid>
        <i-grid-item>
            <i-grid-icon>
                <image src="../static/images/user.png" />
            </i-grid-icon>
            <i-grid-label>今日上新</i-grid-label>
        </i-grid-item>
        <i-grid-item>
            <i-grid-icon>
                <image src="../static/images/user.png" />
            </i-grid-icon>
            <i-grid-label>9.9包邮</i-grid-label>
        </i-grid-item><i-grid-item>
            <i-grid-icon>
                <image src="../static/images/user.png" />
            </i-grid-icon>
            <i-grid-label>人气宝贝</i-grid-label>
        </i-grid-item><i-grid-item>
            <i-grid-icon>
                <image src="../static/images/user.png" />
            </i-grid-icon>
            <i-grid-label>品牌爆款</i-grid-label>
        </i-grid-item>
      </i-grid>
    </view>
    <i-notice-bar loop=true icon="systemprompt">今日特卖，每天早晚9点上新</i-notice-bar>
    <view class="product-container">
      <block wx:for="{{products}}">
        <view class="product-item">
          <navigator url="{{item.cps_url}}">
            <image class="product-img" src="{{item.image_url}}" />
            <view class="product-text">
              <text class="product-title">{{item.title}}</text>
              <text class="product-price">￥{{item.vip_price}}</text>
            </view>
          </navigator>
        </view>
      </block>
    </view>
    <i-modal
      title="授权提醒"
      visible="{{ visible }}"
      show-ok=false
      show-cancel=false
    >
      <view>
        <text>提供授权信息</text>
        <button open-type="getUserInfo" bindgetuserinfo="getUserInfomation" lang="zh_CN">获取用户信息</button>
      </view>
    </i-modal>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import Slider from '../components/list'

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '首页',
      usingComponents: {
        'i-tabs': '../ui/tabs/index',
        'i-tab': '../ui/tab/index',
        'i-input': '../ui/input/index',
        'i-grid': '../ui/grid/index',
        'i-grid-item': '../ui/grid-item/index',
        'i-grid-icon': '../ui/grid-icon/index',
        'i-grid-label': '../ui/grid-label/index',
        'i-notice-bar': '../ui/notice-bar/index',
        'i-modal': '../ui/modal/index'
      }
    }

    components = {
      // imgcontainer: Slider,
      imgslider: Slider
    }

    data = {
      current_scroll: 'tab1',
      visible: false,
      sliderArr: [],
      products: []
    }

    async checkLoginStatus () {
      const data = await this.login()
      if (!data) {
        this.visible = true
      }
    }

    async login () {
      const { code } = await wepy.login()
      const params = {
        code,
        ...this.$parent.globalData.loginData
      }
      const res = await wepy.request({
        url: 'https://hb.dickxun.com/api/user/login',
        method: 'POST',
        data: params
      })
      return res
    }

    async getCateGory () {
      const res = await wepy.request({
        url: 'https://hb.dickxun.com/api/category/list',
        method: 'POST',
        data: {
          page: 0,
          page_size: 10
        }
      })
    }

    async getSlider () {
      const { data } = await wepy.request({
        url: 'https://hb.dickxun.com/api/app/index',
        method: 'POST'
      })
      this.sliderArr = data.result
    }

    async getProducts () {
      const { data } = await wepy.request({
        url: 'https://hb.dickxun.com/api/goods/list',
        method: 'POST',
        data: {
          page: 0,
          page_size: 4
        }
      })
      this.products = data.result.list
      console.log(this.products)
    }

    methods = {
      handleChangeScroll ({ detail }) {
        this.current_scroll = detail.key
      },

      getUserInfomation (e) {
        this.$parent.globalData.userInfo = e.detail.userInfo
        this.$parent.globalData.loginData = {
          encrypted_data: e.detail.encryptedData,
          iv: e.detail.iv,
          signature: e.detail.signature
        }
        this.login()
      }
    }

    async onLoad () {
      this.checkLoginStatus()
      this.getCateGory()
      this.getSlider()
      this.getProducts()
    }
  }
</script>
